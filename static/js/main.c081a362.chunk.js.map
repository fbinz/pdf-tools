{"version":3,"sources":["serviceWorker.js","util.js","pdfDocument.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","readFileAsync","file","reader","FileReader","Promise","resolve","reject","onerror","abort","name","error","onload","result","readAsArrayBuffer","useNumber","initialValue","minValue","maxValue","useState","value","setValue","newValue","PdfDocument","pdfDoc","this","id","uuid","pdfBytes","PDFDocument","load","save","blob","Blob","type","URL","createObjectURL","getPageCount","srcDoc","indices","create","destPdf","copyPages","embeddedPages","page","addPage","e","atPage","_","clamp","pageCount","all","range","doc1","doc2","copyAllPages","doc","a","getPageIndices","downloadDoc","blobUrl","url","document","createElement","href","download","clickHandler","setTimeout","revokeObjectURL","removeEventListener","addEventListener","click","FileInput","Map","pdfDocs","setPdfDocs","DndProvider","backend","HTML5Backend","className","FileDropArea","onDrop","item","monitor","newFiles","files","produce","draft","set","canDrop","PdfDocumentList","Button","onClick","downloadAll","props","useDrop","accept","NativeTypes","FILE","drop","ref","children","partAId","partBId","partA","get","partB","merge","delete","onDragEnd","fromIdx","toIdx","destination","source","index","assocs","splice","removed","newMap","forEach","kv","combine","draggableId","droppableId","isCombineEnabled","provided","snapshot","droppableProps","innerRef","map","key","draggableProps","dragHandleProps","PdfDocumentComponent","combineTargetFor","placeholder","loadDoc","signal","useAsync","promiseFn","isPending","__","showExtractMenu","setShowExtractMenu","extractStart","setExtractStart","extractStop","setExtractStop","extractStep","setExtractStep","showSplitMenu","setShowSplitMenu","splitWhere","setSplitWhere","split","extractPages","newDoc","htmlFor","step","onChange","ev","target","ExtractMenu","omit","App","enableAllPlugins","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c081a362.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {useState} from \"react\";\n\nexport function readFileAsync(file) {\n  const reader = new FileReader();\n  return new Promise((resolve, reject) => {\n    reader.onerror = () => {\n      reader.abort();\n      reject(`Could not read file named ${file.name}, error: ${reader.error}`);\n    };\n    reader.onload = () => {\n      resolve(reader.result);\n    }\n    reader.readAsArrayBuffer(file);\n  })\n}\n\nexport function useNumber(initialValue, minValue, maxValue) {\n  const [value, setValue] = useState(initialValue);\n  return [value, (newValue) => {\n    if (newValue < minValue) {\n      setValue(minValue);\n    } else if (newValue > maxValue) {\n      setValue(maxValue);\n    } else {\n      setValue(newValue);\n    }\n  }]\n}","import { PDFDocument } from 'pdf-lib';\nimport { readFileAsync } from './util';\nimport _ from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\nexport class PdfDocument {\n  constructor(file, pdfDoc) {\n    this.file = file;\n    this.pdfDoc = pdfDoc;\n    this.id = uuid();\n  }\n\n  get pageCount() {\n    return this.pdfDoc ? this.pdfDoc.getPageCount() : 0;\n  }\n\n  get name() {\n    return this.file.name;\n  }\n\n  async load() {\n    if (!this.pdfDoc) {\n      const pdfBytes = await readFileAsync(this.file);\n      this.pdfDoc = await PDFDocument.load(pdfBytes);\n    }\n  }\n\n  static async copyPages(srcDoc, name, indices) {\n    const destPdf = await PDFDocument.create();\n    const embeddedPages = await destPdf.copyPages(srcDoc.pdfDoc, indices);\n    for (const page of embeddedPages) {\n      destPdf.addPage(page);\n    }\n    return new PdfDocument({name: name}, destPdf);\n  }\n\n  static async split(srcDoc, atPage) {\n    atPage = _.clamp(atPage, 0, srcDoc.pageCount);\n    return Promise.all([\n      PdfDocument.copyPages(srcDoc, srcDoc.file.name + 'A', _.range(atPage)),\n      PdfDocument.copyPages(srcDoc, srcDoc.file.name + 'B', _.range(atPage, srcDoc.pageCount))\n    ])\n  }\n\n  static async extractPages(srcDoc, indices) {\n    return PdfDocument.copyPages(srcDoc, srcDoc.file.name + '_extracted', indices)\n  }\n\n  static async merge(doc1, doc2) {\n    const destPdf = await PDFDocument.create();\n    async function copyAllPages(doc) {\n      const embeddedPages = await destPdf.copyPages(doc.pdfDoc, doc.pdfDoc.getPageIndices())\n      for (const page of embeddedPages) {\n        destPdf.addPage(page);\n      }\n    }\n    await copyAllPages(doc1);\n    await copyAllPages(doc2);\n    return new PdfDocument({name: doc1.file.name}, destPdf);\n  }\n\n  async blobUrl() {\n    const pdfBytes = await this.pdfDoc.save();\n    const blob = new Blob([pdfBytes], {type: \"application/pdf\"})\n    return URL.createObjectURL(blob)\n  }\n}","import React, {useEffect, useState, useRef} from 'react';\nimport {DndProvider, useDrop} from \"react-dnd\";\nimport {HTML5Backend, NativeTypes} from \"react-dnd-html5-backend\";\nimport {DragDropContext, Draggable, Droppable} from 'react-beautiful-dnd';\nimport './tailwind.output.css';\nimport produce from \"immer\";\nimport _ from 'lodash';\nimport {PdfDocument} from './pdfDocument';\nimport {useAsync} from 'react-async';\nimport {useNumber} from \"./util\";\n\n\nfunction App() {\n  return <div className=\"flex justify-center w-full\">\n    <div className=\"flex flex-col text-gray-800 items-center w-3/4\">\n      <h1 className=\"tracking-wider pt-10 text-center text-4xl\">PDF-TOOLS</h1>\n      <h2 className=\"text-center mb-10\">no upload - just your browser</h2>\n      <FileInput />\n    </div>\n  </div>\n}\n\nasync function downloadDoc(doc) {\n  const url = await doc.blobUrl();\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = 'download';\n  const clickHandler = () => {\n    setTimeout(() => {\n      URL.revokeObjectURL(url); a.removeEventListener('click', clickHandler);\n    }, 150);\n  };\n  a.addEventListener('click', clickHandler, false);\n  a.click();\n}\n\nfunction FileInput() {\n  const [pdfDocs, setPdfDocs] = useState(new Map());\n\n  function onDrop(newFiles) {\n    setPdfDocs(produce(draft => {\n      for (const file of newFiles) {\n        const doc = new PdfDocument(file);\n        draft.set(doc.id, doc);\n      }\n    }));\n  }\n\n  function downloadAll() {\n    for (const [id, doc] of pdfDocs) {\n      downloadDoc(doc)\n    }\n  }\n\n  return <DndProvider backend={HTML5Backend}>\n    <div className=\"w-full\">\n      <FileDropArea onDrop={(item, monitor) => onDrop(item.files)} canDrop={(item, monitor) => true}>\n        <div className=\"p-10 items-center border-2 rounded-md border-dashed border-gray-500 bg-gray-300 hover:border-blue-500\">\n          <PdfDocumentList pdfDocs={pdfDocs} setPdfDocs={setPdfDocs}/>\n        </div>\n      </FileDropArea>\n    </div>\n    <div className=\"flex w-full flow-row justify-between\">\n      <Button className=\"flex-1\" onClick={() => downloadAll()}>Download All</Button>\n    </div>\n  </DndProvider>\n}\n\nfunction FileDropArea(props) {\n  const [, drop] = useDrop({\n    accept: NativeTypes.FILE,\n    drop(item, monitor) {\n      props.onDrop(item, monitor);\n    },\n    canDrop(item, monitor) {\n      return props.canDrop(item, monitor)\n    },\n  })\n\n  return <div ref={drop}>\n    {props.children}\n  </div>\n}\n\nfunction PdfDocumentList({pdfDocs, setPdfDocs}) {\n\n  function reorder(fromIdx, toIdx) {\n    setPdfDocs(produce(draft => {\n      const assocs = [...draft];\n      const [removed] = assocs.splice(fromIdx, 1);\n      assocs.splice(toIdx, 0, removed);\n      const newMap = new Map();\n      assocs.forEach(kv => newMap.set(...kv));\n      return newMap;\n    }))\n  }\n\n  async function merge(partAId, partBId) {\n    const partA = pdfDocs.get(partAId);\n    const partB = pdfDocs.get(partBId);\n    const doc = await PdfDocument.merge(partA, partB);\n    setPdfDocs(produce(draft => {\n      draft.delete(partAId);\n      draft.delete(partBId);\n      draft.set(doc.id, doc);\n    }))\n  }\n\n  function onDragEnd(result) {\n    // dropped inside list\n    if (result.destination) {\n      reorder(result.source.index, result.destination.index);\n    }\n    // dropped onto another element in list\n    else if (result.combine) {\n      merge(result.combine.draggableId, result.draggableId);\n    }\n  }\n\n  return <DragDropContext onDragEnd={onDragEnd}>\n    <Droppable droppableId=\"droppable\" isCombineEnabled>{(provided, snapshot) =>\n      <div {...provided.droppableProps} ref={provided.innerRef}>{[...pdfDocs].map(([id, pdfDoc], index) =>\n        <Draggable key={id} draggableId={id} index={index}>{(provided, snapshot) =>\n          <div className=\"relative w-full\" ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n            <PdfDocumentComponent doc={pdfDoc} setPdfDocs={setPdfDocs}/>\n            {snapshot.combineTargetFor ? <div className=\"absolute inset-0 w-full h-full bg-blue-200 text-center opacity-50\">\n              <div className=\"text-sm\">DROP TO MERGE</div>\n            </div> : null}\n          </div>}\n        </Draggable>)}\n        {provided.placeholder}\n      </div>}\n    </Droppable>\n  </DragDropContext>\n}\n\nasync function loadDoc({doc}, {signal}) {\n  await doc.load();\n}\n\nfunction PdfDocumentComponent({doc, setPdfDocs}) {\n  const {__, error, isPending} = useAsync({promiseFn: loadDoc, doc: doc});\n  const [showExtractMenu, setShowExtractMenu] = useState(false);\n  const [extractStart, setExtractStart] = useNumber(1, 1, 100);\n  const [extractStop, setExtractStop] = useNumber(100, 1, 100);\n  const [extractStep, setExtractStep] = useNumber(1, 1, 100);\n\n  const [showSplitMenu, setShowSplitMenu] = useState(false);\n  const [splitWhere, setSplitWhere] = useState(1);\n\n  function ExtractMenu() {\n    if (!showExtractMenu) {\n      return null;\n    }\n\n    async function extractPages() {\n      const indices = _.range(extractStart - 1, extractStop, extractStep);\n      const newDoc = await PdfDocument.extractPages(doc, indices);\n      setPdfDocs(produce(draft => {\n        draft.delete(doc.id);\n        draft.set(newDoc.id, newDoc);\n      }))\n    }\n\n    return <div className=\"flex flex-col w-full\">\n      <hr className=\"my-2\"/>\n      <div className=\"flex justify-end\">\n        <div>\n          <label htmlFor=\"extract-start\">Start:</label>\n          <input className=\"w-20\" id=\"extract-start\" name=\"extract-start\" type=\"number\" step={1}\n                 onChange={ev => setExtractStart(ev.target.value)} value={extractStart}/>\n          <label htmlFor=\"extract-stop\">Stop:</label>\n          <input className=\"w-20\" id=\"extract-stop\" name=\"extract-stop\" type=\"number\" step={1}\n                 onChange={ev => setExtractStop(ev.target.value)} value={extractStop}/>\n          <label htmlFor=\"extract-step\">Step:</label>\n          <input className=\"w-20\" id=\"extract-step\" name=\"extract-step\" type=\"number\" step={1}\n                 onChange={ev => setExtractStep(ev.target.value)} value={extractStep}/>\n          <Button type=\"submit\" onClick={() => extractPages()}>Extract Pages</Button>\n        </div>\n      </div>\n    </div>\n  }\n\n  function SplitMenu() {\n    if (!showSplitMenu) {\n      return null;\n    }\n\n    return <div className=\"flex flex-col w-full\">\n      <hr className=\"my-2\"/>\n      <div className=\"flex justify-end\">\n        <div>\n          <label htmlFor=\"extract-start\">Where:</label>\n          <input className=\"w-20\" id=\"split-where\" name=\"split-where\" type=\"number\" step={1}\n                 onChange={ev => setSplitWhere(ev.target.value)} value={splitWhere}/>\n          <Button type=\"submit\" onClick={() => split()}>Split Pages</Button>\n        </div>\n      </div>\n    </div>\n  }\n\n  async function split() {\n    const [partA, partB] = await PdfDocument.split(doc, splitWhere);\n    setPdfDocs(produce(draft => {\n      draft.delete(doc.id);\n      draft.set(partA.id, partA);\n      draft.set(partB.id, partB);\n    }))\n  }\n\n  function remove() {\n    setPdfDocs(produce(draft => {\n      draft.delete(doc.id);\n    }))\n  }\n\n  return <div className=\"flex flex-col rounded border border-gray-400 p-2 w-full bg-gray-200 relative\">\n    <div className=\"flex items-center\">\n      <div className=\"flex-1\">{doc.name} {isPending ? 'Loading....' : `(${doc.pageCount})`}</div>\n      <Button className=\"text-sm ml-1\" onClick={() => setShowExtractMenu(!showExtractMenu)}>EXTRACT</Button>\n      <Button className=\"text-sm ml-1\" onClick={() => setShowSplitMenu(!showSplitMenu)}>SPLIT</Button>\n      <Button className=\"text-sm ml-1\" onClick={() => remove()}>REMOVE</Button>\n      <Button className=\"text-sm ml-1\" onClick={() => downloadDoc(doc)}>DOWNLOAD</Button>\n    </div>\n    {ExtractMenu()}\n    {SplitMenu()}\n  </div>\n}\n\nfunction Button(props) {\n  return <button className={\"bg-gray-100 rounded border border-gray-400 p-1 \" + (props.className ? props.className : \"\")}\n                 {..._.omit(props, ['className', 'children'])}>\n    {props.children}\n  </button>\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport {enableAllPlugins} from \"immer\";\nenableAllPlugins();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}